import json
import boto3
import time

dynamodb = boto3.resource('dynamodb')
table = dynamodb.Table('tablename')

def lambda_handler(event, context):
    try:
        # Handle input parsing (API Gateway may wrap in 'body')
        if "body" in event and event["body"]:
            body = json.loads(event["body"])
        else:
            body = event  # fallback if already JSON

        name = body.get("name", "Anonymous")
        message = body.get("message", "")

        if not message:
            return {
                "statusCode": 400,
                "body": json.dumps({"error": "Message cannot be empty"}),
                "headers": {"Access-Control-Allow-Origin": "*"}
            }

        # Unique ID based on timestamp
        entry_id = str(int(time.time() * 1000))

        # Insert into DynamoDB
        table.put_item(Item={
            "id": entry_id,
            "name": name,
            "message": message
        })

        # âœ… Clean consistent response
        return {
            "statusCode": 200,
            "body": json.dumps({
                "success": True,
                "message": "Message saved successfully!"
            }),
            "headers": {"Access-Control-Allow-Origin": "*"}
        }

    except Exception as e:
        return {
            "statusCode": 500,
            "body": json.dumps({"error": str(e)}),
            "headers": {"Access-Control-Allow-Origin": "*"}
        }

